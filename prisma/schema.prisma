// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

generator client {
  provider = "prisma-client-js"
}

model Example {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())

  @@index([name])
}

model FrogQuestion {
  id          Int      @id @default(autoincrement())
  submittedAt DateTime @default(now())
  submittedBy String
  response    String
}

model FormData {
  id             Int      @id @default(autoincrement())
  submittedAt    DateTime @default(now())
  dateOfBirth    String
  country        String
  mascOrFem      String
  transStart     String
  transEnd       String
  comingOutStart String
  comingOutEnd   String
  hrtStart       String
  notes          String
  feedback       String
  future         String
}

model MainForm {
  id                        Int      @id @default(autoincrement())
  submittedAt               DateTime @default(now())
  dateOfBirth               String
  country                   String   @db.Text
  genderEntry               String   @db.Text
  genderOther               String   @db.Text
  raceEntry                 String   @db.Text
  raceOther                 String   @db.Text
  hrtType                   String
  // medication question hhhh idk how to do that
  mascEffectsEntry          String   @db.Text
  mascEffectsOther          String   @db.Text
  mascEffectsSexComfortable String //this might be a bool
  mascEffectsSexEntry       String   @db.Text
  mascEffectsSexOther       String   @db.Text

  femEffectsEntry          String @db.Text
  femEffectsOther          String @db.Text
  femEffectsCyclicEntry    String @db.Text
  femEffectsCyclicOther    String @db.Text
  femEffectsSexComfortable String //this also might be a bool
  femEffectsSexEntry       String @db.Text
  femEffectsSexOther       String @db.Text

  otherMedications String @db.Text
  otherConditions  String @db.Text
  additions        String @db.Text
  experience       String @db.Text
  feedback         String @db.Text

  medication MedicationData[]
}

model MedicationData {
  medId       Int      @id @default(autoincrement())
  submittedAt DateTime @default(now())
  row         Int
  method      String
  medication  String
  amount      String
  frequency   String
  start       String
  end         String
  ongoing     String
  termination String   @db.Text

  submitter   MainForm @relation(fields: [submitterId], references: [id])
  submitterId Int
}
